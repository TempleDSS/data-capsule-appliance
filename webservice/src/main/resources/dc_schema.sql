-- MySQL Script generated by MySQL Workbench
-- Wed Aug 10 11:22:04 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema htrcvirtdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema htrcvirtdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `htrcvirtdb` DEFAULT CHARACTER SET utf8 ;
USE `htrcvirtdb` ;

-- -----------------------------------------------------
-- Table `htrcvirtdb`.`images`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `htrcvirtdb`.`images` ;

CREATE TABLE IF NOT EXISTS `htrcvirtdb`.`images` (
  `imagename` VARCHAR(128) NOT NULL,
  `status` VARCHAR(128) NOT NULL,
  `imagedescription` VARCHAR(1024) NULL,
  `imagepath` VARCHAR(512) NULL,
  `loginusername` VARCHAR(32) NULL,
  `loginpassword` VARCHAR(128) NULL,
  PRIMARY KEY (`imagename`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `htrcvirtdb`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `htrcvirtdb`.`users` ;

CREATE TABLE IF NOT EXISTS `htrcvirtdb`.`users` (
  `guid` varchar(64) NOT NULL,
  `useremail` VARCHAR(128) NULL,
  `cpuleftquota` int(11) NULL,
  `memoryleftquota` INT(11) NULL,
  `diskleftquota` INT(11) NULL,
  `usertype` VARCHAR(64) NULL DEFAULT 'regular',
  `pub_key` VARCHAR(1024) CHARACTER SET utf8 DEFAULT NULL,
  `tou` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`guid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `htrcvirtdb`.`vmhosts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `htrcvirtdb`.`vmhosts` ;

CREATE TABLE IF NOT EXISTS `htrcvirtdb`.`vmhosts` (
  `hostname` VARCHAR(128) NOT NULL,
  `cpu_cores` INT(11) DEFAULT NULL,
  `mem_gb` INT(11) DEFAULT NULL,
  PRIMARY KEY (`hostname`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `htrcvirtdb`.`vms`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `htrcvirtdb`.`vms` ;

CREATE TABLE IF NOT EXISTS `htrcvirtdb`.`vms` (
  `vmid` VARCHAR(128) NOT NULL,
  `vmmode` ENUM('MAINTENANCE', 'SECURE', 'NOT_DEFINED') NULL,
  `vmstate` ENUM('CREATE_PENDING','LAUNCH_PENDING','RUNNING','SWITCH_TO_MAINTENANCE_PENDING','SWITCH_TO_SECURE_PENDING','SHUTDOWN_PENDING','SHUTDOWN','DELETE_PENDING','ERROR', 'DELETED', 'DELETE_ERROR', 'MIGRATE_PENDING') NULL,
  `sshport` INT(11) DEFAULT NULL,
  `vncport` INT(11) DEFAULT NULL,
  `workingdir` VARCHAR(512) DEFAULT NULL,
  `imagename` VARCHAR(128) DEFAULT NULL,
  `vncusername` VARCHAR(128) DEFAULT NULL,
  `vncpassword` VARCHAR(128) DEFAULT NULL,
  `numcpus` INT(11) DEFAULT NULL,
  `memorysize` INT(11) DEFAULT NULL,
  `diskspace` INT(11) DEFAULT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `guid` varchar(64) NOT NULL,
  `host` VARCHAR(128) DEFAULT NULL,
  `type` enum('DEMO','RESEARCH','RESEARCH-FULL') DEFAULT 'RESEARCH',
  `title` varchar(256) DEFAULT NULL,
  `desc_nature` varchar(2048) DEFAULT NULL,
  `desc_requirement` varchar(2048) DEFAULT NULL,
  `desc_outside_data` varchar(2048) DEFAULT NULL,
  `desc_links` varchar(2048) DEFAULT NULL,
  `rr_data_files` varchar(2048) DEFAULT NULL,
  `rr_result_usage` varchar(2048) DEFAULT NULL,
  `desc_shared` varchar(6144) DEFAULT NULL,
  `consent` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`vmid`),
  INDEX `fk_images_idx` (`imagename` ASC),
  INDEX `fk_users_idx` (`guid`),
  INDEX `fk_host_idx` (`host` ASC),
  CONSTRAINT `fk_images`
    FOREIGN KEY (`imagename`)
    REFERENCES `htrcvirtdb`.`images` (`imagename`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users`
    FOREIGN KEY (`guid`)
    REFERENCES `htrcvirtdb`.`users` (`guid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_host`
    FOREIGN KEY (`host`)
    REFERENCES `htrcvirtdb`.`vmhosts` (`hostname`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `htrcvirtdb`.`results`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `htrcvirtdb`.`results` ;

CREATE TABLE IF NOT EXISTS `htrcvirtdb`.`results` (
  `vmid` VARCHAR(128) NOT NULL,
  `resultid` VARCHAR(128) NOT NULL,
  `createtime` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `notified` ENUM('YES', 'NO') NOT NULL DEFAULT 'NO',
  `notifiedtime` TIMESTAMP NULL,
  `reviewer` VARCHAR(128) DEFAULT NULL,
  `status` ENUM('Released', 'Rejected', 'Pending') DEFAULT 'Pending',
  `comment` MEDIUMTEXT NULL,
  PRIMARY KEY (`vmid`, `resultid`),
  CONSTRAINT `fk_vms`
    FOREIGN KEY (`vmid`)
    REFERENCES `htrcvirtdb`.`vms` (`vmid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `htrcvirtdb`.`vmactivity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `htrcvirtdb`.`vmactivity` ;

CREATE TABLE IF NOT EXISTS `htrcvirtdb`.`vmactivity` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `ts` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `vmid` VARCHAR(128) NOT NULL,
  `prev_mode` ENUM('MAINTENANCE', 'SECURE', 'NOT_DEFINED') NOT NULL,
  `curr_mode` ENUM('MAINTENANCE', 'SECURE', 'NOT_DEFINED') NOT NULL,
  `prev_state` ENUM('CREATE_PENDING','LAUNCH_PENDING','RUNNING','SWITCH_TO_MAINTENANCE_PENDING','SWITCH_TO_SECURE_PENDING','SHUTDOWN_PENDING','SHUTDOWN','DELETE_PENDING','ERROR', 'DELETED', 'DELETE_ERROR', 'MIGRATE_PENDING')  NOT NULL,
  `curr_state` ENUM('CREATE_PENDING','LAUNCH_PENDING','RUNNING','SWITCH_TO_MAINTENANCE_PENDING','SWITCH_TO_SECURE_PENDING','SHUTDOWN_PENDING','SHUTDOWN','DELETE_PENDING','ERROR', 'DELETED', 'DELETE_ERROR', 'MIGRATE_PENDING')  NOT NULL,
  `guid` varchar(64) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_vmid_idx` (`vmid` ASC),
  INDEX `fk_guid_idx` (`guid` ASC),
  CONSTRAINT `fk_vmid`
    FOREIGN KEY (`vmid`)
    REFERENCES `htrcvirtdb`.`vms` (`vmid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_guid`
    FOREIGN KEY (`guid`)
    REFERENCES `htrcvirtdb`.`users` (`guid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `htrcvirtdb`.`ports`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `htrcvirtdb`.`ports` ;

CREATE TABLE IF NOT EXISTS `htrcvirtdb`.`ports` (
  `vmid` VARCHAR(128) NOT NULL,
  `host` VARCHAR(128) NOT NULL,
  `sshport` INT(11) NOT NULL,
  `vncport` INT(11) NOT NULL,
  PRIMARY KEY (`vmid`,`host`,`sshport`,`vncport`),
  CONSTRAINT `fk_p_vmid`
    FOREIGN KEY (`vmid`)
    REFERENCES `htrcvirtdb`.`vms` (`vmid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_hosts`
    FOREIGN KEY (`host`)
    REFERENCES `htrcvirtdb`.`vmhosts` (`hostname`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `htrcvirtdb`.`uservmmap`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `htrcvirtdb`.`uservmmap` ;

CREATE TABLE IF NOT EXISTS `htrcvirtdb`.`uservmmap` (
  `vmid` VARCHAR(128) NOT NULL,
  `guid` varchar(64) NOT NULL,
  `role` ENUM('OWNER', 'OWNER-CONTROLLER', 'CONTROLLER', 'SHAREE') NULL,
  `tou` tinyint(1) DEFAULT '0',
  `full_access` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`vmid`,`guid`),
  INDEX `fk_m_vmid_idx` (`vmid` ASC),
  INDEX `fk_m_guid_idx` (`guid` ASC),
  CONSTRAINT `fk_m_vmid`
    FOREIGN KEY (`vmid`)
    REFERENCES `htrcvirtdb`.`vms` (`vmid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_m_guid`
    FOREIGN KEY (`guid`)
    REFERENCES `htrcvirtdb`.`users` (`guid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
